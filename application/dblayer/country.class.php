<?php

/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */

/**
 * File contains class, that implemented database entity `Country`
 *
 * PHP version 5
 * @category   Database Model of the Application
 * @author     Eugene A. Kalosha <ekalosha@gmail.com>
 * @copyright  (c) 2004-2010 by SolArt xIT
 * @license    http://opensource.org/licenses/gpl-3.0.html GNU General Public License version 3.0
 * @version    SVN: $Revision: 97 $
 * @link       http://www.solartxit.com/php2
 * @since      File available since Release 3.0
 */

/**
 * Defining Namespace
 *
 * For PHP versions 5.3 and Higher
 */
// namespace Application\DBLayer;

/**
 * This file is Automatically generated by PHP2 Code Generator.
 * Generation date: 2008-12-20, 17:02:38
 *
 * @author   Eugene A. Kalosha <ekalosha@gmail.com>
 */

/**
 * Class realizes database record of entity `Country`
 *
 * @author   Eugene A. Kalosha <ekalosha@gmail.com>
 * @version  $Id: country.class.php 97 2009-08-19 08:50:57Z eugene $
 * @access   public
 * @package  Application\DBLayer
 */
class Application_DBLayer_Country extends Application_DBLayer_DBTable
{
    /**
     * Current Table Name
     */
    const TABLE_NAME = 'Country';

    /**
     * Automaticaly generated property for field 'ID'
     *
     * @var      integer
     * @access   public
     */
    public $ID;

    /**
     * Automaticaly generated property for field 'ContinentID'
     *
     * @var      integer
     * @access   public
     */
    public $ContinentID;

    /**
     * Automaticaly generated property for field 'CountryName'
     *
     * @var      string
     * @access   public
     */
    public $CountryName;

    /**
     * Automaticaly generated property for field 'CountryCode'
     *
     * @var      string
     * @access   public
     */
    public $CountryCode;

    /**
     * Automaticaly generated property for field 'PhoneCode'
     *
     * @var      integer
     * @access   public
     */
    public $PhoneCode;

    /**
     * Class constructor
     *
     * @param   string  $connectionId Current connection resource
     * @param   integer $pkFieldValue Current record Unique ID
     * @access  public
     */
    public function __construct($pkFieldValue = null)
    {
        $this->_tableName = self::TABLE_NAME;

        // --- Calling Parent Constructor --- //
        parent::__construct($pkFieldValue);
    }

    /**
     * Returns instance of the Current Class for the specified connection
     *
     * This is not a singleton. Such approach is usefull for SQL queries.
     *
     * @param   string $connectionId Database connection ID
     * @return  Application_DBLayer_Country
     * @access  public
     * @static
     */
    public static function getInstance($connectionId)
    {
        $currentClass     = __CLASS__;

        return new $currentClass($connectionId);
    }

}
