<?php

/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */

/**
 * File contains class, that implemented database entity `{{dbTableName}}`
 *
 * PHP version 5
 * @category   Database Model of the Application
 * @author     {{currentDeveloper}}
 * @copyright  (c) 2004-2009 by "SolArt xIT Ltd."
 * @license    http://opensource.org/licenses/gpl-3.0.html GNU General Public License version 3.0
 * @version    SVN: $Revision$
 * @link       http://www.solartxit.com/php2
 * @since      File available since Release 2.0
 */

/**
 * Defining Namespace
 *
 * For PHP versions 5.3 and Higher
 */
// namespace Application\DBLayer;

/**
 * This file is Automatically generated by PHP2 Code Generator.
 * Generation date: {{generationTime}}
 *
 * @author   {{currentDeveloper}}
 */

/**
 * Class realizes database record of entity `{{dbTableName}}`
 *
 * @author   {{currentDeveloper}}
 * @version  $Id$
 * @access   public
 * @package  Application\DBLayer
 */
class {{dbLayerClassName}} extends Application_DBLayer_DBTable
{
    /**
     * Current Table Name
     */
    const TABLE_NAME = '{{dbTableName}}';

    <block:dbField>/**
     * Automaticaly generated property for field '{{fieldName}}'
     *
     * @var      {{fieldType}}
     * @access   public
     */
    public ${{fieldName}};

    </block:dbField>/**
     * Class constructor
     *
     * @param   integer $pkFieldValue Current record Unique ID
     * @access  public
     */
    public function __construct($pkFieldValue = null)
    {
        $this->_tableName = self::TABLE_NAME;

        // --- Calling Parent Constructor --- //
        parent::__construct($pkFieldValue);
    }

    /**
     * Returns instance of the Current Class for the specified connection
     *
     * This is not a singleton. Such approach is usefull for SQL queries.
     *
     * @return  {{dbLayerClassName}}
     * @access  public
     * @static
     */
    public static function getInstance()
    {
        return new self();
    }

}
